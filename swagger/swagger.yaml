swagger: '2.0'
info:
  title: Mintistry API
  description: A coin-creation API for the ethereum blockchain.
  version: 1.0.0
host: api.mintistry.com
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /newAddress:
    post:
      summary: New Address
      description: >
        Generates a new ethereum account (and its corresponding address), which
        is part of the free Mintistry managed wallet service. You supply
        a password that encrypts the wallet's private key. The password is not
        stored or logged anywhere on the Mintistry servers so even we can't
        access your account - only you can. Remember your password! (and your new
        address)
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: password
          in: formData
          description: "A password supplied by you or your user. We don't store this. It is used as the key to encrypt / unlock your new managed wallet. You'll use it later to sign transactions or issue new coins. Don't lose it."
          required: true
          type: string
          format: string
      tags:
        - Address
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'true if the request was successful, false otherwise. Will be contained in all responses so it is OK to check if success is true or false, and this should be done for every response.'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                new_addr:
                  type: string
                  description: 'A hex string containing the new address.'
        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /newCurrency:
    post:
      summary: New Currency
      description: "Create a new cryptocurrency by calling this endpoint. Given a name, a starting amount and an issuer address, a new cryptocurrency contract will be generated and sent to the ethereum blockchain for mining. Because mining takes some time, you will receive a transaction hash, which you can later use (usually about a maximum of 30 seconds later) to verify the contract has been mined retrieve the address of the cryptocurrency (ie. where it lives on the blockchain). You do this by visiting the /checkMined endpoint."
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: issuer_addr
          in: formData
          description: "The hex-string address of the coin's issuer. You can make yourself a new address using the /newAddress API function."
          required: true
          type: string
          format: string
        - name: starting_amount
          in: formData
          required: true
          type: integer
          format: int32
          description: 'The initial amount of coins to be created and placed in the account belonging to issuer_addr. Note that this is the total maximum number of coins that can exist in this currency - so if you want borderline-unlimited coins make this a really big number. If you want something scarce and tradeable make it reasonable. As it is an integer, you should handle decimals in frontend code - for example, if you were making your own dollar-like currency (100 cents in a doller), this would be the total number of cents in existence.'
        - name: coin_name
          in: formData
          required: true
          type: string
          format: string
          description: 'A string name for your currency. This will not be automatically registered with the ethereum currency name registrar (a function for registration will exist when the registrar is finalised). This string is stored in the cryptocurrency contract and can be called to determine the name of the coin. Make it cool.'
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'true if the request was successful, false otherwise. Will be contained in all responses so it is OK to check if success is true or false, and this should be done for every response.'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                transaction_hash:
                  type: string
                  description: 'A hex string containing the transaction hash for the new cryptocurrency. Before it can be used it must be mined into the blockchain - this usually takes about 30 seconds. Use the /checkMined endpoint and give this variable to check if the contract has been mined and obtain its address.'
        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /checkMined:
    post:
      summary: Check Mined
      description: "After creating a transaction on the blockchain (for most users this is creating a new currency) you can check if it has been mined yet by using the /chackMined endpoint. Simply supply a transaction hash and this endpoint returns the ethereum address of the newly mined contract."
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: transaction_hash
          in: formData
          description: "The identifying hash of a transaction on the ethereum blockchain. Returned by /newCurrency."
          required: true
          type: string
          format: string
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'true if mintistry was able to check on the status of the transaction false otherwise.'
                mined:
                  type: boolean
                  description: 'true if the contract appears to have been mined, false otherwise.'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                contract_addr:
                  type: string
                  description: 'A hex string that contains the address of the mined cryptocurrency contract. Once this string is returned, your cryptocurrency is a real thing!'
        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /topUp:
    post:
      summary: Top Up Ethereum Account
      description: "Before creating a transaction, an ethereum account must first be 'topped up' to make sure there is enough ether in the account to make the transaction. Once an account has been topped up once, Mintistry will automatically keep it 'topped up' so that it contains enough ether to send 1-2 transactions per block (30 sec-1 min). If more transactions per block are required, ethereum accounts can be manually topped up or higher top-up packages can be enabled."
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: account_addr
          in: formData
          description: "Ethereum address of the account to top up. (created with /newAddress)"
          required: true
          type: string
          format: string
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'True if mintistry was able create a transaction to top up the account.'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                sender_addr:
                  type: string
                  description: "Ethereum address of account to top up. (created with /newAddress)"

        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /transferCoin:
    post:
      summary: Transfer Coin
      description: "Creates a transfer of a custom cryptocurrency from one user to another, as long as the currency conforms to the metacoin API and the accounts are mintistry managed wallets. For example, after creating a new currency with the /createCurrency endpoint and then verifying it's 'mined' status with the /checkMined endpoint, you may want to transfer some of your newly minted coins to another ethereum account."
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: sender_addr
          in: formData
          description: "Ethereum address of sender. (created with /newAddress)"
          required: true
          type: string
          format: string
        - name: sender_password
          in: formData
          description: "Password for the managed wallet of sender."
          required: true
          type: string
          format: string
        - name: receiver_addr
          in: formData
          description: "Ethereum address of receiver. (created with /newAddress)"
          required: true
          type: string
          format: string
        - name: coin_addr
          in: formData
          description: "Ethereum address of cryptocurrency (returned by /checkMined)"
          required: true
          type: string
          format: string
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'True if mintistry was able to lodge the transaction on the ethereum blockchain, otherwise false'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                transaction_hash:
                  type: string
                  description: 'Hash of the transaction on the ethereum blockchain when transaction was successful, otherwise empty/null.'
                sender_addr:
                  type: string
                  description: "Ethereum address of receiver. (created with /newAddress)"
                receiver_addr:
                  type: string
                  description: "Ethereum address of receiver. (created with /newAddress)"                
                coin_addr:
                  type: string
                  description: "Ethereum address of cryptocurrency (returned by /checkMined)"
        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /getBalance:
    post:
      summary: Get Balance
      description: "Returns the balance of a given account in a given coin. Allows you to check the balance of any account in a custom cryptocurrency, provided it complies with the metacoin API. (all Mintistry coins comply with the metacoin standard.)"
      parameters:
        - name: api_key
          in: formData
          description: API Key supplied by Mintistry
          required: true
          type: string
          format: string
        - name: coin_addr
          in: formData
          description: "Address of the coin to check the balance of."
          required: true
          type: string
          format: string
        - name: account_addr
          in: formData
          description: "Address of the account to check the balance of. (created with /newAddress)"
          required: true
          type: string
          format: string
      responses:
        '200':
          description: 'JSON object with details of response.'
          schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: 'True if mintistry was able to check the balance.'
                message:
                  type: string
                  description: 'A string containing information about the status of the request and hints for further use.'
                account_addr:
                  type: string
                  description:  "Address of the account to check the balance of. (created with /newAddress)"
                amount:
                  type: integer
                  description:  "Amount of coin transferred in base units."
                coin_addr:
                  type: string
                  description: "Address of the coin to check the balance of."
                coin_name:
                  type: string
                  description: "Name of the cryptocurrency."
                balance:
                  type: integer
                  description: "Balance of the given account in the given cryptocurrency."
        '422':
          description: Unprocessable Entity Error
          schema:
            $ref: '#/definitions/UnprocessableEntityError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
definitions:
  UnprocessableEntityError:
    type : object
    properties:
      success : 
        type: boolean
        description: 'Generally false in the case of an unprocessable entity error - here for consistency - can check if success == true for any response.'
      message : 
        type : string
        description: 'Contains a message describing the error. In the case of Unprocessable Entity Error, this will usually contain a description of the required variables ie. api_key and password.'
  InternalServerError:
    type : object
    properties:
      success : 
        type: boolean
        description: 'Generally false in the case of an internal server error - here for consistency - can check if success == true for any response.'
      message : 
        type : string
        description: 'Contains a message describing the error.'